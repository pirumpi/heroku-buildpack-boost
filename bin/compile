#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  echo "       $*"
}

topic "Installing boost"
source $(dirname $0)/../config.sh

indent "BUILD_DIR: $BUILD_DIR"
indent "CACHE_DIR: $CACHE_DIR"
indent "LP_DIR: $LP_DIR"

VENDORED_BOOST="$BUILD_DIR/.boost/$BOOST_VERSION"

if [ ! -d "$VENDORED_BOOST" ]; then
  # Control will enter here if VENDORED_BOOST doesn't exist.
  indent "Download boost start $BOOST_DOWNLOAD_URL"
  mkdir -p "$VENDORED_BOOST"

  curl "$BOOST_DOWNLOAD_URL" -L -s -o - | tar xzf - -C "$VENDORED_BOOST"
  indent "Download boost end"
  ls -al
  cp user-config.jam $VENDORED_BOOST/boost_*/tools/build/example/

fi

boost_lib_path="$BUILD_DIR/.heroku/vendor"
mkdir -p "$boost_lib_path"


cd $VENDORED_BOOST/boost_*
./bootstrap.sh --with-libraries=python --prefix=$boost_lib_path --with-python=/usr/local/bin/python3 --with-python-version=3.6 --with-python-root=/usr/local/lib/python3.6
ls -al
cat project-config.jam
breakithere

./b2
./b2 install

topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_boost.sh
EOF

# Prepend proper environment variables for Python use.
export BOOST_ROOT="$boost_lib_path"
export BOOST_INCLUDEDIR="$boost_lib_path/include"
export BOOST_LIBRARYDIR="$boost_lib_path/lib"

#give environment to later buildpacks
export | grep -E -e ' (BOOST_ROOT|BOOST_INCLUDEDIR|BOOST_LIBRARYDIR)='  > "$LP_DIR/export"
